############################
### Global ocnfigruation ###
############################

$DEPLOY_ENV = "prod-eus"
$VERSION = "1.0"
$SERVICE_NAME = "***-service"

$AZ_SUBSCRIPTION = "*****"-$DEPLOY_ENV"
$ACR_REGISTRY_NAME = "*****""
$DOT_ENV_FILE = "envFile"
$AKS_CLUSTER_NAME = "$DEPLOY_ENV-aks-cluster"
$RESOURCE_GROUP = "$DEPLOY_ENV-aks"
$K8S_FILE_NAME = "./K8S/__$DEPLOY_ENV.yaml"
$CONTAINER_NAME = "$($SERVICE_NAME):$DEPLOY_ENV-$VERSION"

# Set the Kubeconfig
$Env:KUBECONFIG="$Env:KUBECONFIG;$HOME\.kube\config"

## Variables
Write-Host "AZ_USERNAME       :    $AZ_USERNAME";
Write-Host "AZ_PASSWORD       :    $AZ_PASSWORD";
Write-Host "AZ_SUBSCRIPTION   :    $AZ_SUBSCRIPTION";
Write-Host "ACR_REGISTRY_NAME :    $ACR_REGISTRY_NAME";
Write-Host "DOT_ENV_FILE      :    $DOT_ENV_FILE";
Write-Host "AKS_CLUSTER_NAME  :    $AKS_CLUSTER_NAME";
Write-Host "RESOURCE_GROUP    :    $RESOURCE_GROUP";
Write-Host "DEPLOY_ENV        :    $DEPLOY_ENV";

$COMMAND = "az login ``
    --service-principal ``
    --username  ************************************ ``
    --password  ************************************ ``
    --tenant    ************************************ ``
    --output    table"
Write-Host $COMMAND
Invoke-Expression $Command

# Set subscription for dev (docker registry)
$COMMAND = "az account set -s *****"
Write-Host $COMMAND
Invoke-Expression $Command

#  Verify subscription
$COMMAND = "az account show --output table"
Write-Host $COMMAND
Invoke-Expression $Command

$COMMAND = "az acr build ``
    --registry  $ACR_REGISTRY_NAME ``
    --image     $CONTAINER_NAME ``
    --build-arg envFile=.env/$DEPLOY_ENV  ``
    --build-arg version=$VERSION  ``
    --file      Docker/Dockerfile ."
Write-Host $COMMAND
Invoke-Expression $Command

# Set subscription for dev (docker registry)
$COMMAND = "az account set -s $AZ_SUBSCRIPTION"
Write-Host $COMMAND
Invoke-Expression $Command

$COMMAND = "az aks get-credentials ``
     --overwrite-existing ``
     --name 			$AKS_CLUSTER_NAME ``
     --resource-group 	$RESOURCE_GROUP ``
     --admin"
Write-Host $COMMAND
Invoke-Expression $Command

$COMMAND = "kubectl kustomize ./K8S > $K8S_FILE_NAME"
Write-Host $COMMAND
Invoke-Expression $Command

(Get-Content -path $K8S_FILE_NAME -Raw) -replace '- image: .+', "- image: $ACR_REGISTRY_NAME.azurecr.io/$CONTAINER_NAME" | Out-File -FilePath $K8S_FILE_NAME

$COMMAND = "kubectl apply -f $K8S_FILE_NAME"
Write-Host $COMMAND
Invoke-Expression $Command 